{
  "openapi": "3.0.3",
  "info": {
    "title": "RoundSphere API",
    "description": "RoundSphere offers an innovative water conservation product and a data service. The product, shade balls, minimizes water evaporation, prevents algae growth, and enhances water quality in reservoirs. The service provides access to real-time and historical IoT data on environmental metrics like temperature and evaporation rates. It supports researchers with predictive modeling and scientific analysis. RoundSphere combines sustainability-focused products with advanced data services to address water scarcity.\n\n\nSome useful links:\n- [Github repository](https://github.com/sohaibansari420/RoundSpheres)\n- [RoundSphere Postman workspace](https://swe7301-group-4.postman.co/workspace/SWE7301-Group-4-Workspace~a47bff38-a672-4338-885a-988100816f00/collection/36868182-ad73a91f-84ec-4de0-abbb-898bee7bca57?action=share&creator=36868182)",
    "version": "1.2"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:5000",
      "description": "Local development server"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Endpoints for user authentication and token generation"
    },
    { "name": "User", "description": "Endpoints for managing user profiles" },
    {
      "name": "IoT Data",
      "description": "Endpoints for managing scientific/IoT data"
    },
    { "name": "Product", "description": "Endpoints for product management" },
    {
      "name": "Analytics",
      "description": "Endpoints for analytics and predictions"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "User registered successfully" },
          "400": { "description": "Missing required fields" },
          "500": { "description": "Error occurred during registration" }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Authenticate a user and return a JWT token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Login successful" },
          "401": { "description": "Invalid email or password" }
        }
      }
    },
    "/api/get-user-profile": {
      "get": {
        "tags": ["User"],
        "summary": "Retrieve all user profiles (Admin only)",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "List of user profiles" },
          "403": { "description": "Admin access required" }
        }
      }
    },
    "/api/get-user-profile/{profileId}": {
      "get": {
        "tags": ["User"],
        "summary": "Retrieve a specific user's profile (Admin only)",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "example": 1
          }
        ],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "User profile retrieved successfully" },
          "404": { "description": "User not found" },
          "403": { "description": "Admin access required" }
        }
      }
    },
    "/api/update-user-profile/{profileId}": {
      "patch": {
        "tags": ["User"],
        "summary": "Update a user's profile (Admin only)",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "example": 1
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "User profile updated successfully" },
          "403": { "description": "Admin access required" },
          "404": { "description": "User not found" }
        }
      }
    },
    "/api/delete-user-profile/{profileId}": {
      "delete": {
        "tags": ["User"],
        "summary": "Delete a user profile (Admin only)",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "example": 1
          }
        ],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "User profile deleted successfully" },
          "403": { "description": "Admin access required" },
          "404": { "description": "User not found" }
        }
      }
    },
    "/api/add-data": {
      "post": {
        "tags": ["IoT Data"],
        "summary": "Upload a new scientific data record (Admin only)",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Apidata"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Data uploaded successfully" },
          "403": { "description": "Admin access required" }
        }
      }
    },
    "/api/add-data/bulk": {
      "post": {
        "tags": ["IoT Data"],
        "summary": "Upload multiple scientific data records (Admin only)",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Apidata"
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Bulk data uploaded successfully" },
          "403": { "description": "Admin access required" }
        }
      }
    },
    "/api/update-data/{dataId}": {
      "put": {
        "tags": ["IoT Data"],
        "summary": "Update all fields of a scientific data record (Admin only)",
        "parameters": [
          {
            "name": "dataId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "example": 1
          }
        ],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Apidata"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Scientific data updated successfully" },
          "404": { "description": "Data not found" },
          "403": { "description": "Admin access required" }
        }
      }
    },
    "/api/edit-data/{dataId}": {
      "patch": {
        "tags": ["IoT Data"],
        "summary": "Update specific fields of a scientific data record (Admin only)",
        "parameters": [
          {
            "name": "dataId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "example": 1
          }
        ],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Apidata"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Scientific data updated successfully" },
          "404": { "description": "Data not found" },
          "403": { "description": "Admin access required" }
        }
      }
    },
    "/api/get-all-data": {
      "get": {
        "tags": ["IoT Data"],
        "summary": "Retrieve all IoT Data",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "List of IoT Data" },
          "403": { "description": "Login access required" }
        }
      }
    },
    "/api/get-data/{dataId}": {
      "get": {
        "tags": ["IoT Data"],
        "summary": "Retrieve a specific IoT Data",
        "parameters": [
          {
            "name": "dataId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "example": 1
          }
        ],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "IoT Data retrieved successfully" },
          "404": { "description": "IoT Data not found" },
          "403": { "description": "Login access required" }
        }
      }
    },
    "/api/analytics/predictive": {
      "get": {
        "tags": ["Analytics"],
        "summary": "Retrieve all Analytic Data",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "List of Analytic Data" },
          "403": { "description": "Login access required" }
        }
      }
    },
    "/api/analytics": {
      "post": {
        "tags": ["Analytics"],
        "summary": "Upload a new Analytic data record (Admins & Institutions)",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Analytic"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Data uploaded successfully" },
          "403": { "description": "Admin & Institution Access required" }
        }
      }
    },
    "/api/get-all-products": {
      "get": {
        "tags": ["Product"],
        "summary": "Retrieve all Products",
        "responses": {
          "200": { "description": "List of Products Data" },
          "404": { "description": "Products not found" }
        }
      }
    },
    "/api/get-products/{productId}": {
      "get": {
        "tags": ["Product"],
        "summary": "Retrieve a specific Product Data",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "example": 1
          }
        ],
        "responses": {
          "200": { "description": "Product retrieved successfully" },
          "404": { "description": "Product not found" }
        }
      }
    },
    "/api/add-product": {
      "post": {
        "tags": ["Product"],
        "summary": "Upload a new Product record (Admin only)",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Data uploaded successfully" },
          "403": { "description": "Admin Access required" },
          "500": { "description": "Failed to add product" }
        }
      }
    },
    "/api/add-products/bulk": {
      "post": {
        "tags": ["Product"],
        "summary": "Upload multiple Products data records (Admin only)",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Bulk Product uploaded successfully" },
          "403": { "description": "Admin access required" },
          "500": { "description": "Failed to add product" }
        }
      }
    },
    "/api/update-product/{productId}": {
      "put": {
        "tags": ["Product"],
        "summary": "Update all fields of a Product data record (Admin only)",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "example": 1
          }
        ],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Product updated successfully" },
          "404": { "description": "Product not found" },
          "403": { "description": "Admin access required" }
        }
      }
    },
    "/api/edit-product/{productId}": {
      "patch": {
        "tags": ["Product"],
        "summary": "Update specific fields of a scientific data record (Admin only)",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "example": 1
          }
        ],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Product updated successfully" },
          "404": { "description": "Product not found" },
          "403": { "description": "Admin access required" }
        }
      }
    },
    "/api/delete-product/{productId}": {
      "delete": {
        "tags": ["Product"],
        "summary": "Delete a Product (Admin only)",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" },
            "example": 1
          }
        ],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Product deleted successfully" },
          "403": { "description": "Admin access required" },
          "404": { "description": "Product not found" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "profileId": { "type": "integer", "example": 1 },
          "firstname": { "type": "string", "example": "John" },
          "lastname": { "type": "string", "example": "Doe" },
          "email": { "type": "string", "example": "john.doe@example.com" },
          "password": { "type": "string", "example": "securepassword" },
          "role": { "type": "string", "example": "admin" }
        }
      },
      "UserLogin": {
        "type": "object",
        "properties": {
          "email": { "type": "string", "example": "senju@example.com" },
          "password": { "type": "string", "example": "securepassword123" }
        }
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "firstname": { "type": "string", "example": "John" },
          "lastname": { "type": "string", "example": "Smith" },
          "email": { "type": "string", "example": "john.smith@example.com" },
          "role": { "type": "string", "example": "user" }
        }
      },
      "Apidata": {
        "type": "object",
        "properties": {
          "dataId": { "type": "integer", "example": 1 },
          "temperatureWater": { "type": "number", "example": 22.5 },
          "temperatureAir": { "type": "number", "example": 30.0 },
          "humidity": { "type": "number", "example": 75 },
          "windSpeed": { "type": "number", "example": 12.5 },
          "precipitation": { "type": "number", "example": 0.0 },
          "notes": { "type": "string", "example": "Sample notes" }
        }
      },
      "Analytic": {
        "type": "object",
        "properties": {
          "analyticId": { "type": "integer", "format": "int64", "example": 32 },
          "region": { "type": "string", "example": "Northeast" },
          "evaporationRate": {
            "type": "number",
            "format": "float",
            "example": 7.5
          },
          "trend": { "type": "string", "example": "Increasing" },
          "created_at": { "type": "string", "format": "date-time" }
        },
        "xml": {
          "name": "order"
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "productId": { "type": "integer", "format": "int64", "example": 10 },
          "name": { "type": "string", "example": "Water Purifier 2000" },
          "description": {
            "type": "string",
            "example": "Advanced water purifier with multi-stage filtration for homes."
          },
          "price": { "type": "number", "format": "float", "example": 150.25 },
          "stock": { "type": "integer", "format": "int64", "example": 20 },
          "created_at": { "type": "string", "format": "date-time" }
        },
        "xml": {
          "name": "order"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
